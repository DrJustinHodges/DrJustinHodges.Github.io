<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PORTFOLIO on Justin Hodges, PhD</title>
    <link>https://DrJustinHodges.github.io/portfolio/</link>
    <description>Recent content in PORTFOLIO on Justin Hodges, PhD</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© Justin Hodges</copyright>
    <lastBuildDate>Sun, 05 May 2019 19:48:09 +0200</lastBuildDate>
    
	<atom:link href="https://DrJustinHodges.github.io/portfolio/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Pneumonia Classification with PyTorch</title>
      <link>https://DrJustinHodges.github.io/portfolio/sample-project_7_pnemonia/</link>
      <pubDate>Sun, 05 May 2019 19:48:09 +0200</pubDate>
      
      <guid>https://DrJustinHodges.github.io/portfolio/sample-project_7_pnemonia/</guid>
      <description>This project builds a classifier for pneumonia detection in PyTorch from X-Ray images.
The RSNA Pneumonia detection challenge data is from &amp;lsquo;kaggle.com/c/rsna-pneumonia-detection-challenge/&amp;rsquo;. It is nearly 27,000 X-Ray images.
Per usual operation of Google Colab, mount to your Drive and then change directory to where your project files are held.
Here are a list of libraries needed with associated functionality:
Viewing different intensities after simple scaling:
We invoke different methods for transforming/manipulating the images.</description>
    </item>
    
    <item>
      <title>Machine Learning for Marine Hull Design</title>
      <link>https://DrJustinHodges.github.io/portfolio/sample-project_6_marine/</link>
      <pubDate>Sat, 04 May 2019 19:48:09 +0200</pubDate>
      
      <guid>https://DrJustinHodges.github.io/portfolio/sample-project_6_marine/</guid>
      <description>Thumbnail: Variational Autoencoder (VAE) structure diagram. The .stl files associated to different designs are used as input the encoder. The encoder creates a latent parameterization of these geometries, specifically the coordinates of the mesh points, which can be used to accurately re-create geometries at will by the decoder.
This work uses Simcenter STAR-CCM+ to generate CFD data for determining the powering characteristics of a vessel and Simcenter ROM Builder and Monolith for using that data in no-code machine learning pipelines.</description>
    </item>
    
    <item>
      <title>Machine Learning and Turbulence Modeling</title>
      <link>https://DrJustinHodges.github.io/portfolio/sample-project_turbulenceblog/</link>
      <pubDate>Fri, 03 May 2019 19:47:09 +0200</pubDate>
      
      <guid>https://DrJustinHodges.github.io/portfolio/sample-project_turbulenceblog/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Predicting Transient Scalar Fields</title>
      <link>https://DrJustinHodges.github.io/portfolio/sample-project_transient_video/</link>
      <pubDate>Fri, 03 May 2019 19:47:09 +0200</pubDate>
      
      <guid>https://DrJustinHodges.github.io/portfolio/sample-project_transient_video/</guid>
      <description>The topic of AI-based transient predictions in the simulation community is a poular one. Transient simulations, atleast in CFD space, are often very expensive (computationally) and time consuming to complete. Ordinarily, the problems we seek to simulate are transient in nature, and thus more accurate to simulate them that way as well. That is one such appeal for the transient AI use case.
However, it is quite a moon shot to learn unsteady PDEs in a general enough manner that can tackle a large amount of flow simulations.</description>
    </item>
    
    <item>
      <title>VAE for Blade Design</title>
      <link>https://DrJustinHodges.github.io/portfolio/sample-project_5_vaee_compressor/</link>
      <pubDate>Fri, 03 May 2019 19:47:09 +0200</pubDate>
      
      <guid>https://DrJustinHodges.github.io/portfolio/sample-project_5_vaee_compressor/</guid>
      <description>The use of AI-based ROM with engineering data is indeed powerful and in the &amp;lsquo;ai spotlight&amp;rsquo;, but I think the use of autoencoders is also revolutionary and gaining visibility.
A few inherit benefits:
  Provides a new parameterization you may not have realized from traditional means. They provide highly 3D and &amp;lsquo;abstract&amp;rsquo; changes of the design.
    Allows you to specify however many (or few) parameters you wish to have to recreate your geometries (e.</description>
    </item>
    
    <item>
      <title>AI&#43;CFD for ICE</title>
      <link>https://DrJustinHodges.github.io/portfolio/sample-project_ice&#43;monolith/</link>
      <pubDate>Thu, 02 May 2019 19:47:09 +0200</pubDate>
      
      <guid>https://DrJustinHodges.github.io/portfolio/sample-project_ice&#43;monolith/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>